"""
Django settings for TaskAPI project.

Generated by 'django-admin startproject' using Django 5.2.4.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-a$!7qs@foxed5dv0b_c15k)h_@pkh!uda0#7)q-l1^wimwhf+y'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',
    'accounts',
    'tasks',
]

REST_FRAMEWORK = {
  "DEFAULT_AUTHENTICATION_CLASSES": (
    "rest_framework_simplejwt.authentication.JWTAuthentication",),
}

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'TaskAPI.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR/ 'templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'TaskAPI.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

AUTH_USER_MODEL = 'accounts.CustomUser'

# Applying security measures to protect my app
# This prevents detailed error messages that might show sensitive information in browsers
SECURE_BROWSER_XSS_FILTER = True
# Enables browsers built in Xss(cross site scripting) security features
# protects against the injection of malicious scripts
X_FRAME_OPTIONS = "DENY"
# Prevents the site from being loaded inside an <iframe>. prevents clickjacking
SECURE_CONTENT_TYPE_NOSNIFF = True
# stops browsers from trying to guess a files content type
CSRF_COOKIE_SECURE = True
# This ensures that csrf token is only transmitted via HTTPS
# CSRF - cross site request forgery
SESSION_COOKIE_SECURE = True
# Protects session cookies from being intersepted over unencripted HTTP

# Extra security measures
SECURE_SSL_REDIRECT = True
# redirrects all non HTTPS requests to HTTPS.
SECURE_PROXY_SSL_HEADER = ("HTTP_X_FORWARDED_PROTO", "https")

SECURE_HSTS_SECONDS = 31536000
# instructs browsers to only access a site via HTTPS for a specified time
# in this case 31536000 means one year.
SECURE_HSTS_INCLUDE_SUBDOMAINS = True
SECURE_HSTS_PRELOAD = True
# to include all subdomain in the HSTS policy and to allow preloading.

# The below are cookie settings to ensure that cookies are sent throught HTTPS
SESSION_COOKIE_SECURE = True
# ensures cookies are only transmitted via HTTPS.
CSRF_COOKIE_SECURE = True
# ensure csrf cookies are only sent via HTTPS


# After installing django-csp. we insclude the above codes so the site can
# utilize csp headers in its response
INSTALLED_APPS += ["csp"]
# adds csp to installed apps
MIDDLEWARE += ["csp.middleware.CSPMiddleware"]
#Enforces csp policy 

# Example policy:
CONTENT_SECURITY_POLICY = {
    "DIRECTIVES": {
        "default-src": ("'self'",),
        # "script-src": ("'self'", "https://cdn.jsdelivr.net"),
        # "style-src": ("'self'", "https://fonts.googleapis.com"),
        # "font-src": ("'self'", "https://fonts.gstatic.com"),
    }
}